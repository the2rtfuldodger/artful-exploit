import socket
import subprocess
from ipaddress import ip_address
from parsenmap import *

def reverse_dns(ip):
    try:
        rig = socket.gethostbyaddr(ip)
        return str(rig[0])
    except:
        return None

def ips_starting_at(start, n):
    start_int = int(ip_address(start).packed.hex(), 16)
    end_int = start_int + n
    return [ip_address(ip).exploded for ip in range(start_int, end_int)]

def ips_in_range(start, end):
    start_int = int(ip_address(start).packed.hex(), 16)
    end_int = int(ip_address(end).packed.hex(), 16)
    #print(start_int, end_int)
    return [ip_address(ip).exploded for ip in range(start_int, end_int)]

def db_scan(host):
    res = subprocess.run(['bash', './scripts/dbscan.sh', host], capture_output=True)
    resdat = str(res.stdout).encode('utf-8').decode('unicode_escape')
    #print("Res dat: %s" % (resdat,))
    return parse_db_scan_output(resdat)

def brute_dns(host):
    # ../nmaps/brutedns.sh
    res = subprocess.run(['bash', './scripts/brutedns.sh', host], capture_output=True)
    resdat = str(res.stdout).encode('utf-8').decode('unicode_escape')
    #print("Res dat: %s" % (resdat,))
    return parse_brute_dns_output(resdat)
